version: '3.9'

services:
  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - app-network

  service1:
    build:
      context: .
      dockerfile: ./service1/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - ${GRPC_PORT}:50051
    networks:
      - app-network

  service2:
    build:
      context: .
      dockerfile: ./service2/Dockerfile
    env_file:
      - .env
    ports:
      - ${HTTP_PORT}:8080
    depends_on:
      - service1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge